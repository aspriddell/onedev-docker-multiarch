name: build
on:
  workflow_dispatch: { }
      
env:
  BUILD_PLATFORMS: "linux/arm64,linux/amd64"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: microsoft
          java-version: 11
       
      - id: release-detection
        name: Get Latest Release
        uses: oprypin/find-latest-tag@v1
        with:
          repository: theonedev/onedev
          releases-only: true
        
      - name: Clone Latest OneDev Release
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: theonedev/onedev
          ref: ${{ steps.release-detection.outputs.tag }}

      - name: Build 
        run: |
          cd $GITHUB_WORKSPACE
          mvn -Dmaven.test.skip=true package

      - name: Dockerise
        run: |
          cd $GITHUB_WORKSPACE/server-product/target
          
          rm -rf docker
          cp -r ../docker docker
          buildVersion=`ls onedev-*.zip|sed -e 's/onedev-\(.*\).zip/\1/'`

          unzip onedev-$buildVersion.zip -d docker
          mv docker/onedev-$buildVersion docker/app
          cp sandbox/site/lib/mysql* sandbox/site/lib/postgresql* docker/app/site/lib

          docker buildx build -f docker/Dockerfile.server --platform $BUILD_PLATFORMS --push -t aspriddell/onedev:server -t aspriddell/onedev:server-${{ steps.release-detection.outputs.tag }} docker

          # cp -r agent docker/
          # docker buildx build -f docker/Dockerfile.agent --platform $BUILD_PLATFORMS --push -t aspriddell/onedev:agent -t aspriddell/onedev:agent-${{ steps.release-detection.outputs.tag }} docker
          
